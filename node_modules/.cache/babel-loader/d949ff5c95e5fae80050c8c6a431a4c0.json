{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nika\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport { Message, Label, SubmitButton, FormContainer } from \"./ContactForm.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().required().positive().integer()\n});\nexport default class ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: \"\",\n      number: \"\"\n    };\n\n    this.handleSubmit = (_ref, _ref2) => {\n      let {\n        name,\n        number\n      } = _ref;\n      let {\n        resetForm\n      } = _ref2;\n      this.setState({\n        name: name,\n        number: number\n      });\n      this.props.onSubmit(this.state);\n      resetForm();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        number: \"\"\n      },\n      onSubmit: this.handleSubmit,\n      validationSchema: schema,\n      children: /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"name\",\n              render: message => /*#__PURE__*/_jsxDEV(Message, {\n                children: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"tel\",\n              children: \"Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"tel\",\n              name: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"number\",\n              render: message => /*#__PURE__*/_jsxDEV(Message, {\n                children: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            type: \"submit\",\n            children: \"Add contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/nika/OneDrive/Документы/phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","yup","Message","Label","SubmitButton","FormContainer","schema","object","shape","name","string","required","number","positive","integer","ContactForm","state","handleSubmit","resetForm","setState","props","onSubmit","render","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SACEC,OADF,EAEEC,KAFF,EAGEC,YAHF,EAIEC,aAJF,QAKO,sBALP;;AAOA,MAAMC,MAAM,GAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,EAAAA,IAAI,EAAER,GAAG,CAACS,MAAJ,GAAaC,QAAb,EAD0B;AAEhCC,EAAAA,MAAM,EAAEX,GAAG,CAACW,MAAJ,GAAaD,QAAb,GAAwBE,QAAxB,GAAmCC,OAAnC;AAFwB,CAAnB,CAAf;AAKA,eAAe,MAAMC,WAAN,SAA0BnB,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACjDoB,KADiD,GACzC;AACNP,MAAAA,IAAI,EAAE,EADA;AAENG,MAAAA,MAAM,EAAE;AAFF,KADyC;;AAAA,SAMjDK,YANiD,GAMlC,iBAAqC;AAAA,UAApC;AAAER,QAAAA,IAAF;AAAQG,QAAAA;AAAR,OAAoC;AAAA,UAAlB;AAAEM,QAAAA;AAAF,OAAkB;AAClD,WAAKC,QAAL,CAAc;AAAEV,QAAAA,IAAI,EAAEA,IAAR;AAAcG,QAAAA,MAAM,EAAEA;AAAtB,OAAd;AACA,WAAKQ,KAAL,CAAWC,QAAX,CAAoB,KAAKL,KAAzB;AACAE,MAAAA,SAAS;AACV,KAVgD;AAAA;;AAYjDI,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEb,QAAAA,IAAI,EAAE,EAAR;AAAYG,QAAAA,MAAM,EAAE;AAApB,OADjB;AAEE,MAAA,QAAQ,EAAE,KAAKK,YAFjB;AAGE,MAAA,gBAAgB,EAAEX,MAHpB;AAAA,6BAKE,QAAC,aAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,YAAY,EAAC,KAAnB;AAAA,kCACE;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,YAAD;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,MAAM,EAAGiB,OAAD,iBACN,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,KAAZ;AAAkB,cAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,YAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,MAAM,EAAGA,OAAD,iBACN,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,eA4BE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YADF;AAwCD;;AArDgD","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport {\n  Message,\n  Label,\n  SubmitButton,\n  FormContainer,\n} from \"./ContactForm.styled\";\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().required().positive().integer(),\n});\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleSubmit = ({ name, number }, { resetForm }) => {\n    this.setState({ name: name, number: number });\n    this.props.onSubmit(this.state);\n    resetForm();\n  };\n\n  render() {\n    return (\n      <Formik\n        initialValues={{ name: \"\", number: \"\" }}\n        onSubmit={this.handleSubmit}\n        validationSchema={schema}\n      >\n        <FormContainer>\n          <Form autoComplete=\"off\">\n            <div>\n              <Label htmlFor=\"name\">Name</Label>\n              <Field type=\"text\" name=\"name\" />\n              <ErrorMessage\n                name=\"name\"\n                render={(message) => (\n                  <Message>\n                    Name may contain only letters, apostrophe, dash and spaces.\n                    For example Adrian, Jacob Mercer, Charles de Batz de\n                    Castelmore d'Artagnan\n                  </Message>\n                )}\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"tel\">Number</Label>\n              <Field type=\"tel\" name=\"number\" />\n              <ErrorMessage\n                name=\"number\"\n                render={(message) => (\n                  <Message>\n                    Phone number must be digits and can contain spaces, dashes,\n                    parentheses and can start with +\n                  </Message>\n                )}\n              />\n            </div>\n            <SubmitButton type=\"submit\">Add contact</SubmitButton>\n          </Form>\n        </FormContainer>\n      </Formik>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}